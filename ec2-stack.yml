---
- name: ec2 stack 
  hosts: localhost
  connection: local 
  gather_facts: False 
  tasks:
    - name: import vpc variable file
      include_vars: output_vars

    - name: import vpc variable file
      include_vars: Images

    - name: Creating an ec2 key for instance 
      ec2_key:
        name: stack-key
        region: "{{region}}"
      register: key_out

    - name: copying the content of private key
      copy:
        content: "{{key_out.key.private_key}}"
        dest: stack-key.pem
        mode: 0600
      when: key_out.changed

    - name: Creating a Security group for load balancer
      ec2_group:
        name: ELB-SG
        description: allowing port 80 from anywhere for ELB
        vpc_id: "{{vpcid}}"
        region: "{{region}}"
        purge_rules: no 
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: ELBSG_out

    - name: Creating SG for EC2 instance web app stack
      ec2_group:
        name: webstackSG
        description: allowing traffic from load balance SG and bastion host SG
        vpc_id: "{{vpcid}}"
        region: "{{region}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{ELBSG_out.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{bastionSGid}}"
      register: webstackSG_out

    - name: Adding another rule of internal traffic by webstack 
      ec2_group:
        name: webstackSG
        description: allowing traffic from load balance SG and bastion host SG
        vpc_id: "{{vpcid}}"
        region: "{{region}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{webstackSG_out.group_id}}"

    - name: Creating nginx web server
      ec2:
        key_name: stack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: web01
          Project: infra
          Owner: Devops 
        exact_count: 1
        count_tag:
          Name: web01
          Project: infra
          Owner: Devops
        group_id: "{{webstackSG_out.group_id}}"
        vpc_subnet_id: "{{Prisub1id}"
      register: web01_out

    - name: Creating tomcat server
      ec2:
        key_name: stack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: app01
          Project: infra
          Owner: Devops 
        exact_count: 1
        count_tag:
          Name: app01
          Project: infra
          Owner: Devops
        group_id: "{{webstackSG_out.group_id}}"
        vpc_subnet_id: "{{Prisub1id}}"
      register: app01_out

    - name: Creating memcached server
      ec2:
        key_name: stack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mecached_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: mc01
          Project: infra
          Owner: Devops 
        exact_count: 1
        count_tag:
          Name: mc01
          Project: infra
          Owner: Devops
        group_id: "{{webstackSG_out.group_id}}"
        vpc_subnet_id: "{{Prisub1id}}"
      register: mc01_out

    - name: Creating rabbitmq server
      ec2:
        key_name: stack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rabbitmq_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: rmq01
          Project: infra
          Owner: Devops 
        exact_count: 1
        count_tag:
          Name: rmq01
          Project: infra
          Owner: Devops
        group_id: "{{webstackSG_out.group_id}}"
        vpc_subnet_id: "{{Prisub1id}}"
      register: rmq01_out
    
    - name: Creating  mysql server
      ec2:
        key_name: stack-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: db01
          Project: infra
          Owner: Devops 
        exact_count: 1
        count_tag:
          Name: db01
          Project: infra
          Owner: Devops
        group_id: "{{webstackSG_out.group_id}}"
        vpc_subnet_id: "{{Prisub1id}}"
      register: db01_out

